[{"path":"https://livioivil.github.io/pima/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Filippo Gambarota. Maintainer.","code":""},{"path":"https://livioivil.github.io/pima/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Finos L, Girardi P, Gambarota F, Vesely , Calignano G, Pastore M, Altoè G (2025). pima: Post-selection Inference Multiverse Analysis. R package version 1.2.0, https://livioivil.github.io/pima.","code":"@Manual{,   title = {pima: Post-selection Inference in Multiverse Analysis},   author = {Livio Finos and Paolo Girardi and Filippo Gambarota and Anna Vesely and Giulia Calignano and Massimiliano Pastore and Gianmarco Altoè},   year = {2025},   note = {R package version 1.2.0},   url = {https://livioivil.github.io/pima}, }"},{"path":"https://livioivil.github.io/pima/index.html","id":"pima-r-package","dir":"","previous_headings":"","what":"Post-selection Inference in Multiverse Analysis","title":"Post-selection Inference in Multiverse Analysis","text":"package devoted Post-selection Inference Multiverse Analysis (PIMA): Inferential Framework Based Sign Flipping Score Test Girardi, P., Vesely, ., Lakens, D., Altoè, G., Pastore, M., Calcagnì, ., & Finos, L. (2024). Post-selection Inference Multiverse Analysis (PIMA): Inferential Framework Based Sign Flipping Score Test. Psychometrika, 1-27.","code":""},{"path":"https://livioivil.github.io/pima/index.html","id":"set-up","dir":"","previous_headings":"","what":"Set up","title":"Post-selection Inference in Multiverse Analysis","text":"install github version type (R):","code":"##if devtools is not installed yet:  ## install.packages(\"devtools\")  library(devtools) install_github(\"livioivil/pima\")"},{"path":"https://livioivil.github.io/pima/index.html","id":"a-minimal-example","dir":"","previous_headings":"","what":"A (minimal) example","title":"Post-selection Inference in Multiverse Analysis","text":"","code":"n=20 set.seed(123) D=data.frame(X=rnorm(n),Z1=rnorm(n),Z2=rnorm(n)) D$Y=D$Z1+D$X+rnorm(n) mod1=glm(Y~X+Z1+Z2,data=D) mod2=glm(Y~X+poly(Z1,2)+Z2,data=D) mod3=glm(Y~X+poly(Z1,2)+poly(Z2,2),data=D) mod4=glm(Y~X+Z1+poly(Z2,2),data=D) mods=list(mod1=mod1,mod2=mod2,mod3=mod3,mod4=mod4) for(i in 1:length(mods))  mods[[i]]$call$data=eval(D) library(pima) res=join_flipscores(mods,n_flips = 5000,        seed = 1, tested_coeffs = \"X\") summary(res) #>   Model Coeff  Estimate    Score Std. Error  z value Part. Cor          p #> 1  mod1     X 1.1254046 19.78375   6.309305 3.135646 0.7605058 0.01499700 #> 2  mod2     X 0.9552644 15.38036   5.053879 3.043278 0.7608195 0.01339732 #> 3  mod3     X 1.0121921 14.31866   4.836669 2.960437 0.7643816 0.01279744 #> 4  mod4     X 1.1696906 17.62979   5.875380 3.000621 0.7501552 0.00979804 summary(combine(res)) #>     Model Coeff Stat nMods        S          p #> 1 Overall     X maxT     4 19.78375 0.00739852 res=pima:::p.adjust.pima(res) summary(res) #>   Model Coeff  Estimate    Score Std. Error  z value Part. Cor          p #> 1  mod1     X 1.1254046 19.78375   6.309305 3.135646 0.7605058 0.01499700 #> 2  mod2     X 0.9552644 15.38036   5.053879 3.043278 0.7608195 0.01339732 #> 3  mod3     X 1.0121921 14.31866   4.836669 2.960437 0.7643816 0.01279744 #> 4  mod4     X 1.1696906 17.62979   5.875380 3.000621 0.7501552 0.00979804 #>      p.adj #> 1 0.019996 #> 2 0.019996 #> 3 0.019996 #> 4 0.019996"},{"path":"https://livioivil.github.io/pima/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Post-selection Inference in Multiverse Analysis","text":"J Hemerik, JJ Goeman L Finos (2019) Robust testing generalized linear models sign-flipping score contributions. Journal Royal Statistical Society Series B: Statistical Methodology, Volume 82, Issue 3, July 2020, Pages 841–864.https://doi.org/10.1111/rssb.12369 R De Santis, J Goeman, J Hemerik, L Finos (2022) Inference generalized linear models robustness misspecified variances arXiv: 2209.13918.https://arxiv.org/abs/2209.13918 P Girardi, Vesely, D Lakens, G Altoè, M Pastore, Calcagnì, L Finos (2022) Post-selection Inference Multiverse Analysis (PIMA): inferential framework based sign flipping score test. arxiv: 2210.02794.https://arxiv.org/abs/2210.02794","code":""},{"path":"https://livioivil.github.io/pima/index.html","id":"bug-reports","dir":"","previous_headings":"","what":"Bug reports","title":"Post-selection Inference in Multiverse Analysis","text":"encounter bug, please file reprex (minimal reproducible example) github.","code":""},{"path":"https://livioivil.github.io/pima/reference/create_multi.html","id":null,"dir":"Reference","previous_headings":"","what":"Create the scenarios for the multiverse — create_multi","title":"Create the scenarios for the multiverse — create_multi","text":"Create scenarios multiverse","code":""},{"path":"https://livioivil.github.io/pima/reference/create_multi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create the scenarios for the multiverse — create_multi","text":"","code":"create_multi(   formula,   data,   focal = NULL,   nfuns = NULL,   cfuns = NULL,   transf.focal = FALSE,   subset = NULL,   fit.fun = NULL,   fit.fun.args = NULL )"},{"path":"https://livioivil.github.io/pima/reference/create_multi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create the scenarios for the multiverse — create_multi","text":"formula formula describing maximal model bare variables (tranformations). Currently supporting interactions. data dataset model focal optional name coefficient focus analysis. transformation applied variable model exclude variable. nfuns functions applied numerical variables. functions need provided characters. argument can vector functions (e.g., `c(\"log\", \"exp\")`) functions applied al numerical variable exluding focal predictor. alternative, can named list specifing name variable functions string (e.g., `list(x = \"log\", z = c(\"exp\"))`) way functions variable-specific. `NULL` transformations applied. cfuns `nfuns` factor/character variables. `NULL` transformations applied.","code":""},{"path":"https://livioivil.github.io/pima/reference/create_multi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create the scenarios for the multiverse — create_multi","text":"list","code":""},{"path":"https://livioivil.github.io/pima/reference/create_multi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create the scenarios for the multiverse — create_multi","text":"","code":"create_multi(~ Sepal.Length + Petal.Width + Species,               focal = \"Sepal.Length\",               nfuns = c(\"log\"),               data = iris) #> Error in create_multi(~Sepal.Length + Petal.Width + Species, focal = \"Sepal.Length\",     nfuns = c(\"log\"), data = iris): could not find function \"create_multi\""},{"path":"https://livioivil.github.io/pima/reference/global_tests.html","id":null,"dir":"Reference","previous_headings":"","what":"Global tests in multiverse analysis — global_tests","title":"Global tests in multiverse analysis — global_tests","text":"Tests global null hypotheses weak control Family-Wise Error Rate, considering one parameters within multiverse models.","code":""},{"path":"https://livioivil.github.io/pima/reference/global_tests.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Global tests in multiverse analysis — global_tests","text":"","code":"global_tests(obj, by = NULL, comb_funct = \"maxT\", comb_factors = FALSE, comb_factors_funct = \"Mahalanobis\")"},{"path":"https://livioivil.github.io/pima/reference/global_tests.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Global tests in multiverse analysis — global_tests","text":"obj jointest object, e.g., produced pima. mode combination (NULL, Coeff, Model, individual). NULL (default), single global null hypothesis tested. comb_funct combining function (see combine-methods datails). comb_factors logical. FALSE, coefficients levels factor variables considered separately. TRUE, single global test performed factor variable. comb_factors_funct combining function contrasts factor variables (see combine_contrasts datails).","code":""},{"path":"https://livioivil.github.io/pima/reference/global_tests.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Global tests in multiverse analysis — global_tests","text":"Returns object class jointest, containing: Tspace: data frame test statistics, columns correspond tests, rows sign-flipping transformations (first identity). summary_table: data frame containing summary test: combined test statistic p-value.","code":""},{"path":"https://livioivil.github.io/pima/reference/global_tests.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Global tests in multiverse analysis — global_tests","text":"function builds functions combine combine_contrasts jointest package. default = NULL, procedure tests global null hypothesis significant effects (considered coefficients models null) alternative least one significant effect (one non-null coefficient one model). inputs argument test analogous null hypotheses, defined model (Model), coefficient (Coeff) individually (individual). argument comb_factors affects categorical predictors. categorical predictor, default (FALSE), non-baseline coefficients considered separately. TRUE, single global test performed combining tests derived contrasts function specified comb_factors_funct. option = \"individual\", input p-values returned unchanged, except categorical predictors present comb_factors = TRUE.","code":""},{"path":"https://livioivil.github.io/pima/reference/global_tests.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Global tests in multiverse analysis — global_tests","text":"Girardi, Vesely, Lakens, Altoè, Pastore, Calcagnì, Finos (2024). Post-selection Inference Multiverse Analysis (PIMA): Inferential Framework Based Sign Flipping Score Test. Psychometrika, doi: 10.1007/s11336-024-09973-6.","code":""},{"path":"https://livioivil.github.io/pima/reference/global_tests.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Global tests in multiverse analysis — global_tests","text":"","code":"# Generate data set.seed(123) n <- 30 D <- data.frame(X1 = rnorm(n), X2 = rnorm(n)^2,                 X3 = sample(c(\"A\",\"B\",\"C\"), n, replace = TRUE),                 Z1 = rnorm(n), Z2 = rnorm(n)) D$X3 <- factor(D$X3) D$Y <- D$X1 + ifelse(D$X3 == \"C\", 3, 0) + D$Z1 + rnorm(n)  # Multiverse of 4 models (list) mod1 <- glm(Y ~ X1 + X2 + X3 + Z1 + Z2, data = D) mod2 <- glm(Y ~ X1 + X2 + X3 + poly(Z1,2) + Z2, data = D) mod3 <- glm(Y ~ X1 + X2 + X3 + Z1 + poly(Z2,2), data = D) mod4 <- glm(Y ~ X1 + X2 + X3 + poly(Z1,2) + poly(Z2,2), data = D) mods <- list(mod1 = mod1, mod2 = mod2, mod3 = mod3, mod4 = mod4)  # Test selected coefficients (raw and adjusted p-values) res <- pima(mods, tested_coeffs = c(\"X1\",\"X2\",\"X3B\",\"X3C\")) #> Error in loadNamespace(x): there is no package called ‘jointest’ summary(res) #> Error: object 'res' not found  # Global p-values: overall, by model and by coefficient summary(global_tests(res)) #> Error in loadNamespace(x): there is no package called ‘jointest’ summary(global_tests(res, by = \"Model\")) #> Error in match.arg(by, choices = c(\"coefficient\", \"model\", \"individual\")): 'arg' should be one of “coefficient”, “model”, “individual” summary(global_tests(res, by = \"Coeff\")) #> Error in match.arg(by, choices = c(\"coefficient\", \"model\", \"individual\")): 'arg' should be one of “coefficient”, “model”, “individual”  # Global tests for each factor summary(global_tests(res, by = \"individual\", comb_factors = TRUE)) #> Error in loadNamespace(x): there is no package called ‘jointest’  # These tests can be aggregated as before (e.g., by coefficient) summary(global_tests(res, by = \"Coeff\", comb_factors = TRUE)) #> Error in match.arg(by, choices = c(\"coefficient\", \"model\", \"individual\")): 'arg' should be one of “coefficient”, “model”, “individual”"},{"path":"https://livioivil.github.io/pima/reference/pima-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Methods for pima objects — pima-method","title":"Methods for pima objects — pima-method","text":"Methods pima objects. following methods extract manipulate relevant information pima object.","code":""},{"path":"https://livioivil.github.io/pima/reference/pima-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Methods for pima objects — pima-method","text":"","code":"# S3 method for class 'pima' print(object, n = 4)  # S3 method for class 'pima' summary(object, digits = NULL, ...)  # S3 method for class 'pima' as(object, names_obj = NULL, ...)  # S3 method for class 'pima' plot(   object,   focal = NULL,   xvar = NULL,   p.adjusted = TRUE,   p.transf = \"z\",   alpha = 0.05,   xlab = NULL,   ylab = NULL,   regex = FALSE,   shapes = NULL,   facet = FALSE,   facet.scales = NULL,   ... )"},{"path":"https://livioivil.github.io/pima/reference/pima-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Methods for pima objects — pima-method","text":"object object class pima. digits number digits rounding. Default `NULL` thus rounding. ... additional arguments passed names_obj vector names, length must equal length object focal character vector indicating coefficients plot. > 1 coefficient provided (NULL) `xvar` provided `Part. Cor` column used instead `Estimate`. xvar character indicating column `object$summary_table` plotted x axis. Default \"Estimate\". p.transf can character vector indicating transformation use (see [transf_p()]) custom function. alpha value 0 1. plot mark p-values smaller alpha (0.05 default). equal 0 1 nothing marked. xlab character vector indicating x-axis label. Default `xvar` ylab character vector indicating y-axis label. Default `p` `p.adjust.<method>` method `object$p.adjust.method`. p.adjust logical indicating whether plotting raw (`FALSE`) adjusted p.values (`TRUE`, default).","code":""},{"path":"https://livioivil.github.io/pima/reference/pima-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Post-selection Inference in Multiverse Analysis — pima-package","title":"Post-selection Inference in Multiverse Analysis — pima-package","text":"Runs resampling-based tests jointly allow multiple testing multiverse analysis. main feature, applies PIMA procedure, general flexible framework based sign-flip score test provides control Family-Wise Error Rate (FWER) confidence bounds True Discovery Proportions (TDPs).","code":""},{"path":"https://livioivil.github.io/pima/reference/pima-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Post-selection Inference in Multiverse Analysis — pima-package","text":"starting point package pima function. See examples .","code":""},{"path":"https://livioivil.github.io/pima/reference/pima-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Post-selection Inference in Multiverse Analysis — pima-package","text":"Girardi, Vesely, Lakens, Altoè, Pastore, Calcagnì, Finos (2024). Post-selection Inference Multiverse Analysis (PIMA): Inferential Framework Based Sign Flipping Score Test. Psychometrika, doi: 10.1007/s11336-024-09973-6. Hemerik, Goeman, Finos (2020). Robust testing generalized linear models sign flipping score contributions. Journal Royal Statistical Society, Series B (Statistical Methodology), doi: 10.1111/rssb.12369. De Santis, Goeman, Hemerik, Davenport, Finos (2025). Inference generalized linear models robustness misspecified variances. Journal American Statistical Association, doi: 10.1080/01621459.2025.2491775.","code":""},{"path":"https://livioivil.github.io/pima/reference/pima-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Post-selection Inference in Multiverse Analysis — pima-package","text":"Livio Finos, Paolo Girardi, Filippo Gambarota, Anna Vesely, Giulia Calignano, Massimiliano Pastore, Gianmarco Altoè","code":""},{"path":"https://livioivil.github.io/pima/reference/pima.html","id":null,"dir":"Reference","previous_headings":"","what":"Post-selection Inference in Multiverse Analysis — pima","title":"Post-selection Inference in Multiverse Analysis — pima","text":"Applies PIMA procedure make selective inference one parameters within multiverse models, derived different specifications data (e.g., pre-processing) model (GLMs). method jointly computes resampling-based test statistics coefficients interest models. output allows multiple testing multiverse analysis, providing weak strong control Family-Wise Error Rate (FWER) confidence bounds True Discovery Proportions (TDPs).","code":""},{"path":"https://livioivil.github.io/pima/reference/pima.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Post-selection Inference in Multiverse Analysis — pima","text":"","code":"pima(mods, tested_coeffs = NULL, n_flips = 5000, method = c(\"maxT\", \"minP\", \"none\"), ...)"},{"path":"https://livioivil.github.io/pima/reference/pima.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Post-selection Inference in Multiverse Analysis — pima","text":"mods list objects can evaluated flipscores, usually model objects produced glm flipscores. tested_coeffs tested coefficients. can vector names (common models) list length mods, element vector names. NULL, coefficients tested. n_flips number sign flips. method correction method among maxT, minP none. Can abbreviated. ... parameters join_flipscores.","code":""},{"path":"https://livioivil.github.io/pima/reference/pima.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Post-selection Inference in Multiverse Analysis — pima","text":"Returns object class pima, containing: Tspace: data frame test statistics, columns correspond tests, rows sign-flipping transformations (first identity). summary_table: data frame containing summary tested coefficient model: estimate, score, standard error, z value, partial correlation, raw p-value, adjusted p-value. mods: list model objects computed flipscores. tested_coeffs: tested coefficients, input.","code":""},{"path":"https://livioivil.github.io/pima/reference/pima.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Post-selection Inference in Multiverse Analysis — pima","text":"procedure builds sign-flip score test implemented function flipscores flipscores package. tested coefficient model, computes set resampling-based test statistics raw p-value null hypothesis coefficient null two-sided alternative. method maxT (default) minP, multiplicity-adjusted p-values added using step-method Westfall Young (1993). Adjusted p-values provide control FWER asymptotically sample size , practical purposes, almost exact control sample size. Post-selection inference achieved merging information considered models: output summary shows adjusted p-values strong FWER control: \"effects models significant?\" global_tests produces global p-value weak FWER control, possibly coefficient model: \"least one significant effect?\" pimaAnalysis (sumSome) computes lower confidence bound TDP, among tested effects within subset: \"many considered effects significant?\" parameters include: score_type: type score computed (see flipscores datails). default \"standardized\" provides almost exact control error sample size. statistics: test statistics computed procedure. Currently, t implemented method. Different statistics affect multivariate inference, univariate. seed: can specified ensure replicability results. output_models: TRUE return list model objects produced flipscores.","code":""},{"path":"https://livioivil.github.io/pima/reference/pima.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Post-selection Inference in Multiverse Analysis — pima","text":"Girardi, Vesely, Lakens, Altoè, Pastore, Calcagnì, Finos (2024). Post-selection Inference Multiverse Analysis (PIMA): Inferential Framework Based Sign Flipping Score Test. Psychometrika, doi: 10.1007/s11336-024-09973-6. Hemerik, Goeman, Finos (2020). Robust testing generalized linear models sign flipping score contributions. Journal Royal Statistical Society, Series B (Statistical Methodology), doi: 10.1111/rssb.12369. De Santis, Goeman, Hemerik, Davenport, Finos (2025). Inference generalized linear models robustness misspecified variances. Journal American Statistical Association, doi: 10.1080/01621459.2025.2491775.","code":""},{"path":"https://livioivil.github.io/pima/reference/pima.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Post-selection Inference in Multiverse Analysis — pima","text":"","code":"# Generate data set.seed(123) n <- 30 D <- data.frame(X1 = rnorm(n), X2 = rnorm(n)^2,                 X3 = sample(c(\"A\",\"B\",\"C\"), n, replace = TRUE),                 Z1 = rnorm(n), Z2 = rnorm(n)) D$X3 <- factor(D$X3) D$Y <- D$X1 + ifelse(D$X3 == \"C\", 3, 0) + D$Z1 + rnorm(n)  # Multiverse of 4 models (list) mod1 <- glm(Y ~ X1 + X2 + X3 + Z1 + Z2, data = D) mod2 <- glm(Y ~ X1 + X2 + X3 + poly(Z1,2) + Z2, data = D) mod3 <- glm(Y ~ X1 + X2 + X3 + Z1 + poly(Z2,2), data = D) mod4 <- glm(Y ~ X1 + X2 + X3 + poly(Z1,2) + poly(Z2,2), data = D) mods <- list(mod1 = mod1, mod2 = mod2, mod3 = mod3, mod4 = mod4)  # Test selected coefficients (raw and adjusted p-values) res <- pima(mods, tested_coeffs = c(\"X1\",\"X2\",\"X3B\",\"X3C\")) #> Error in loadNamespace(x): there is no package called ‘jointest’ summary(res) #> Error: object 'res' not found  # Global p-values: overall, by model and by coefficient summary(global_tests(res)) #> Error in loadNamespace(x): there is no package called ‘jointest’ summary(global_tests(res, by = \"Model\")) #> Error in match.arg(by, choices = c(\"coefficient\", \"model\", \"individual\")): 'arg' should be one of “coefficient”, “model”, “individual” summary(global_tests(res, by = \"Coeff\")) #> Error in match.arg(by, choices = c(\"coefficient\", \"model\", \"individual\")): 'arg' should be one of “coefficient”, “model”, “individual”  # Global tests for each factor summary(global_tests(res, by = \"individual\", comb_factors = TRUE)) #> Error in loadNamespace(x): there is no package called ‘jointest’  # These tests can be aggregated as before (e.g., by coefficient) summary(global_tests(res, by = \"Coeff\", comb_factors = TRUE)) #> Error in match.arg(by, choices = c(\"coefficient\", \"model\", \"individual\")): 'arg' should be one of “coefficient”, “model”, “individual”  # Lower 95%-confidence bound for the TDP # require(sumSome) # pimaAnalysis(res, alpha = 0.4) # pimaAnalysis(res, by = \"Model\", alpha = 0.4) # pimaAnalysis(res, by = \"Coeff\", alpha = 0.4)"},{"path":"https://livioivil.github.io/pima/reference/pima_tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Classification Tree with Adjusted p-values — pima_tree","title":"Classification Tree with Adjusted p-values — pima_tree","text":"function builds classification tree based raw adjusted p-values using results regression model.","code":""},{"path":"https://livioivil.github.io/pima/reference/pima_tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Classification Tree with Adjusted p-values — pima_tree","text":"","code":"pima_tree(res, p.values = \"adjusted\", method = \"class\", alpha = 0.05, ...)"},{"path":"https://livioivil.github.io/pima/reference/pima_tree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Classification Tree with Adjusted p-values — pima_tree","text":"res list object specific structure containing regression model results. contain `mods`, list models, `summary_table`, data frame summary results, including estimates p-values. p.values char string indicating type p-values use. Options `\"raw\"` `\"adjusted\"` (default). `\"raw\"`, function uses p-values `summary_table`. method used function `rpart::rpart` `method=\"class\"` classify significant p-values level `alpha` alpha used `method=\"class\"` ... parameter `rpart::rpart`.","code":""},{"path":"https://livioivil.github.io/pima/reference/pima_tree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Classification Tree with Adjusted p-values — pima_tree","text":"plot classification tree using `rpart.plot()`.","code":""},{"path":"https://livioivil.github.io/pima/reference/pima_tree.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Classification Tree with Adjusted p-values — pima_tree","text":"","code":"# Example usage (assuming `res` is a pre-computed result object) # pvalue_tree(res, p.values = \"raw\")"},{"path":"https://livioivil.github.io/pima/reference/spec_curve.html","id":null,"dir":"Reference","previous_headings":"","what":"A character vector with the title for the overall plot (applied to the top plot internally). — spec_curve","title":"A character vector with the title for the overall plot (applied to the top plot internally). — spec_curve","text":"Specification Curve Analysis","code":""},{"path":"https://livioivil.github.io/pima/reference/spec_curve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A character vector with the title for the overall plot (applied to the top plot internally). — spec_curve","text":"","code":"spec_curve(   x,   focal = NULL,   yvar = NULL,   p.adjusted = NULL,   alpha = 0.05,   tbr = c(0.4, 0.6),   colors = NULL,   shapes = NULL,   title = NULL,   xlab = NULL,   ylab = NULL,   top.theme = NULL,   bottom.theme = NULL,   redundant = TRUE,   conf.int = FALSE )"},{"path":"https://livioivil.github.io/pima/reference/spec_curve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A character vector with the title for the overall plot (applied to the top plot internally). — spec_curve","text":"x object class `pima`, usually result `pima()` function. yvar character indicating column `x$summary_table` object used y axes top part specification curve (usually estimated parameter). Default `\"Estimate\"`. alpha numeric value specifying significance level confidence intervals. Default 0.05. tbr numeric vector two elements indicating proportion space assigned top bottom part plot. colors character vector two elements colors point representing non-significant significant p-values. xlab character vector x axis title. Default \"Specification\" ylab character vector y axis title top plot. Default `yvar`. top.theme function `ggplot2` compatible theme top plot. Default ggplot2::theme_minimal()` bottom.theme function `ggplot2` compatible theme bottom plot Default `ggplot2::theme_minimal()` p.values character indicating column `x$summary_table` object p values. Default `\"\"p.adj.maxT\"` (maxT corrected p values). character vector two elements shapes representing non-significant significant p-values. Default simple points.","code":""},{"path":"https://livioivil.github.io/pima/reference/spec_curve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A character vector with the title for the overall plot (applied to the top plot internally). — spec_curve","text":"plot displaying specification curve confidence intervals p-values, well legend showing variable combinations used specification. output object [`patchwork`] object thus collection `ggplot2` objects. underlying datasets can accessed using `@data` plot.","code":""},{"path":"https://livioivil.github.io/pima/reference/spec_curve.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A character vector with the title for the overall plot (applied to the top plot internally). — spec_curve","text":"function performs specification curve analysis based results set regression models. visualizes coefficient estimates confidence intervals, p-values, highlights significant specifications.","code":""},{"path":"https://livioivil.github.io/pima/reference/spec_curve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A character vector with the title for the overall plot (applied to the top plot internally). — spec_curve","text":"","code":"# Example usage (assuming `res` is a pre-computed result object): # spec_curve(res, alpha = 0.05)"},{"path":"https://livioivil.github.io/pima/reference/transf_p.html","id":null,"dir":"Reference","previous_headings":"","what":"Transforming p-values — transf_p","title":"Transforming p-values — transf_p","text":"Transforming p-values","code":""},{"path":"https://livioivil.github.io/pima/reference/transf_p.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transforming p-values — transf_p","text":"","code":"transf_p(p, method = \"raw\")"},{"path":"https://livioivil.github.io/pima/reference/transf_p.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transforming p-values — transf_p","text":"p numeric vector p-values method transformation method. Can one \"raw\" (transformation), \"-log10\" \"z\". Can also custom function.","code":""},{"path":"https://livioivil.github.io/pima/reference/transf_p.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transforming p-values — transf_p","text":"transformed p-values","code":""},{"path":"https://livioivil.github.io/pima/reference/transf_p.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transforming p-values — transf_p","text":"","code":"p <- c(0.01, 0.05, 0.8) transf_p(p, method = \"raw\") #> [1] 0.01 0.05 0.80 transf_p(p, method = \"z\") #> [1] 2.5758293 1.9599640 0.2533471 # with custom function transf_p(p, method = function(x) x/2) #> [1] 0.005 0.025 0.400"}]
